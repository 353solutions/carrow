// The following directive is necessary to make the package coherent:

// +build ignore

// This program generates contributors.go. It can be invoked by running
// go generate
package main

import (
	"log"
	"os"
	"text/template"
	"time"
)

type data struct {
	Type string
}

func main() {
	arrowTypes := []string{"Bool", "FLOAT64", "INTEGER64", "STRING", "TIMESTAMP"}

	f, err := os.Create("gen/lib_generated.go")
	die(err)
	defer f.Close()

	packageTemplate.Execute(f, struct {
		Timestamp  time.Time
		ArrowTypes []string
	}{
		Timestamp:  time.Now(),
		ArrowTypes: arrowTypes,
	})
}

func die(err error) {
	if err != nil {
		log.Fatal(err)
	}
}

var packageTemplate = template.Must(template.New("").Parse(`// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at
// {{ .Timestamp }}
package carrow

{{range $val := .ArrowTypes}}
	 const int {{$val}}Type = arrow::Type::{{$val}};
{{end}}

`))
